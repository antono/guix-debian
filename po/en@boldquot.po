# English translations for guix package.
# Copyright (C) 2013 Ludovic Court√®s
# This file is distributed under the same license as the guix package.
# Automatically generated, 2013.
#
# All this catalog "translates" are quotation characters.
# The msgids must be ASCII and therefore cannot contain real quotation
# characters, only substitutes like grave accent (0x60), apostrophe (0x27)
# and double quote (0x22). These substitutes look strange; see
# http://www.cl.cam.ac.uk/~mgk25/ucs/quotes.html
#
# This catalog translates grave accent (0x60) and apostrophe (0x27) to
# left single quotation mark (U+2018) and right single quotation mark (U+2019).
# It also translates pairs of apostrophe (0x27) to
# left single quotation mark (U+2018) and right single quotation mark (U+2019)
# and pairs of quotation mark (0x22) to
# left double quotation mark (U+201C) and right double quotation mark (U+201D).
#
# When output to an UTF-8 terminal, the quotation characters appear perfectly.
# When output to an ISO-8859-1 terminal, the single quotation marks are
# transliterated to apostrophes (by iconv in glibc 2.2 or newer) or to
# grave/acute accent (by libiconv), and the double quotation marks are
# transliterated to 0x22.
# When output to an ASCII terminal, the single quotation marks are
# transliterated to apostrophes, and the double quotation marks are
# transliterated to 0x22.
#
# This catalog furthermore displays the text between the quotation marks in
# bold face, assuming the VT100/XTerm escape sequences.
#
msgid ""
msgstr ""
"Project-Id-Version: guix 0.5\n"
"Report-Msgid-Bugs-To: ludo@gnu.org\n"
"POT-Creation-Date: 2013-12-11 10:49+0100\n"
"PO-Revision-Date: 2013-12-11 10:49+0100\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: en@boldquot\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: gnu/packages.scm:94
#, scheme-format
msgid "cannot access `~a': ~a~%"
msgstr "cannot access ‚Äò[1m~a[0m‚Äô: ~a~%"

#: gnu/packages/base.scm:60
msgid "Hello, GNU world: An example GNU package"
msgstr "Hello, GNU world: An example GNU package"

#: gnu/packages/base.scm:62
msgid ""
"GNU Hello prints the message \"Hello, world!\" and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it "
"supports\n"
"command-line arguments, multiple languages, and so on."
msgstr ""
"GNU Hello prints the message ‚Äú[1mHello, world![0m‚Äù and then exits.  It\n"
"serves as an example of standard GNU coding practices.  As such, it "
"supports\n"
"command-line arguments, multiple languages, and so on."

#: gnu/packages/base.scm:80
msgid "Print lines matching a pattern"
msgstr "Print lines matching a pattern"

#: gnu/packages/base.scm:82
msgid ""
"grep is a tool for finding text inside files.  Text is found by\n"
"matching a pattern provided by the user in one or many files.  The pattern\n"
"may be provided as a basic or extended regular expression, or as fixed\n"
"strings.  By default, the matching text is simply printed to the screen,\n"
"however the output can be greatly customized to include, for example, line\n"
"numbers.  GNU grep offers many extensions over the standard utility,\n"
"including, for example, recursive directory searching."
msgstr ""
"grep is a tool for finding text inside files.  Text is found by\n"
"matching a pattern provided by the user in one or many files.  The pattern\n"
"may be provided as a basic or extended regular expression, or as fixed\n"
"strings.  By default, the matching text is simply printed to the screen,\n"
"however the output can be greatly customized to include, for example, line\n"
"numbers.  GNU grep offers many extensions over the standard utility,\n"
"including, for example, recursive directory searching."

#: gnu/packages/base.scm:104
msgid "Stream editor"
msgstr "Stream editor"

#: gnu/packages/base.scm:119
msgid ""
"Sed is a non-interactive, text stream editor.  It receives a text\n"
"input from a file or from standard input and it then applies a series of "
"text\n"
"editing commands to the stream and prints its output to standard output.  "
"It\n"
"is often used for substituting text patterns in a stream.  The GNU\n"
"implementation offers several extensions over the standard utility."
msgstr ""
"Sed is a non-interactive, text stream editor.  It receives a text\n"
"input from a file or from standard input and it then applies a series of "
"text\n"
"editing commands to the stream and prints its output to standard output.  "
"It\n"
"is often used for substituting text patterns in a stream.  The GNU\n"
"implementation offers several extensions over the standard utility."

#: gnu/packages/base.scm:139
msgid "Managing tar archives"
msgstr "Managing tar archives"

#: gnu/packages/base.scm:141
msgid ""
"Tar provides the ability to create tar archives, as well as the\n"
"ability to extract, update or list files in an existing archive.  It is\n"
"useful for combining many files into one larger file, while maintaining\n"
"directory structure and file information such as permissions and\n"
"creation/modification dates.  GNU tar offers many extensions over the\n"
"standard utility."
msgstr ""
"Tar provides the ability to create tar archives, as well as the\n"
"ability to extract, update or list files in an existing archive.  It is\n"
"useful for combining many files into one larger file, while maintaining\n"
"directory structure and file information such as permissions and\n"
"creation/modification dates.  GNU tar offers many extensions over the\n"
"standard utility."

#: gnu/packages/base.scm:168
msgid "Apply differences to originals, with optional backups"
msgstr "Apply differences to originals, with optional backups"

#: gnu/packages/base.scm:170
msgid ""
"Patch is a program that applies changes to files based on differences\n"
"laid out as by the program \"diff\".  The changes may be applied to one or "
"more\n"
"files depending on the contents of the diff file.  It accepts several\n"
"different diff formats.  It may also be used to revert previously applied\n"
"differences."
msgstr ""
"Patch is a program that applies changes to files based on differences\n"
"laid out as by the program ‚Äú[1mdiff[0m‚Äù.  The changes may be applied to one "
"or more\n"
"files depending on the contents of the diff file.  It accepts several\n"
"different diff formats.  It may also be used to revert previously applied\n"
"differences."

#: gnu/packages/base.scm:190
msgid "Comparing and merging files"
msgstr "Comparing and merging files"

#: gnu/packages/base.scm:192
msgid ""
"GNU Diffutils is a package containing tools for finding the\n"
"differences between files.  The \"diff\" command is used to show how two "
"files\n"
"differ, while \"cmp\" shows the offsets and line numbers where they "
"differ. \n"
"\"diff3\" allows you to compare three files.  Finally, \"sdiff\" offers an\n"
"interactive means to merge two files."
msgstr ""
"GNU Diffutils is a package containing tools for finding the\n"
"differences between files.  The ‚Äú[1mdiff[0m‚Äù command is used to show how two "
"files\n"
"differ, while ‚Äú[1mcmp[0m‚Äù shows the offsets and line numbers where they "
"differ. \n"
"‚Äú[1mdiff3[0m‚Äù allows you to compare three files.  Finally, ‚Äú[1msdiff[0m‚Äù "
"offers an\n"
"interactive means to merge two files."

#: gnu/packages/base.scm:219
msgid "Operating on files matching given criteria"
msgstr "Operating on files matching given criteria"

#: gnu/packages/base.scm:221
msgid ""
"Findutils supplies the basic file directory searching utilities of the\n"
"GNU system.  It consists of two primary searching utilities: \"find\"\n"
"recursively searches for files in a directory according to given criteria "
"and\n"
"\"locate\" lists files in a database that match a query.  Two auxiliary "
"tools\n"
"are included: \"updatedb\" updates the file name database and \"xargs\" may "
"be\n"
"used to apply commands with arbitrarily long arguments."
msgstr ""
"Findutils supplies the basic file directory searching utilities of the\n"
"GNU system.  It consists of two primary searching utilities: ‚Äú[1mfind[0m‚Äù\n"
"recursively searches for files in a directory according to given criteria "
"and\n"
"‚Äú[1mlocate[0m‚Äù lists files in a database that match a query.  Two auxiliary "
"tools\n"
"are included: ‚Äú[1mupdatedb[0m‚Äù updates the file name database and "
"‚Äú[1mxargs[0m‚Äù may be\n"
"used to apply commands with arbitrarily long arguments."

#: gnu/packages/base.scm:265
msgid "Core GNU utilities (file, text, shell)"
msgstr "Core GNU utilities (file, text, shell)"

#: gnu/packages/base.scm:267
msgid ""
"GNU Coreutils includes all of the basic command-line tools that are\n"
"expected in a POSIX system.  These provide the basic file, shell and text\n"
"manipulation functions of the GNU system.  Most of these tools offer "
"extended\n"
"functionality beyond that which is outlined in the POSIX standard."
msgstr ""
"GNU Coreutils includes all of the basic command-line tools that are\n"
"expected in a POSIX system.  These provide the basic file, shell and text\n"
"manipulation functions of the GNU system.  Most of these tools offer "
"extended\n"
"functionality beyond that which is outlined in the POSIX standard."

#: gnu/packages/base.scm:300
msgid "Remake files automatically"
msgstr "Remake files automatically"

#: gnu/packages/base.scm:302
msgid ""
"Make is a program that is used to control the production of\n"
"executables or other files from their source files.  The process is\n"
"controlled from a Makefile, in which the developer specifies how each file "
"is\n"
"generated from its source.  It has powerful dependency resolution and the\n"
"ability to determine when files have to be regenerated after their sources\n"
"change.  GNU make offers many powerful extensions over the standard utility."
msgstr ""
"Make is a program that is used to control the production of\n"
"executables or other files from their source files.  The process is\n"
"controlled from a Makefile, in which the developer specifies how each file "
"is\n"
"generated from its source.  It has powerful dependency resolution and the\n"
"ability to determine when files have to be regenerated after their sources\n"
"change.  GNU make offers many powerful extensions over the standard utility."

#: gnu/packages/base.scm:345
msgid "Binary utilities: bfd gas gprof ld"
msgstr "Binary utilities: bfd gas gprof ld"

#: gnu/packages/base.scm:347
msgid ""
"GNU Binutils is a collection of tools for working with binary files.\n"
"Perhaps the most notable are \"ld\", a linker, and \"as\", an assembler. "
"Other\n"
"tools include programs to display binary profiling information, list the\n"
"strings in a binary file, and utilities for working with archives.  The \"bfd"
"\"\n"
"library for working with executable and object formats is also included."
msgstr ""
"GNU Binutils is a collection of tools for working with binary files.\n"
"Perhaps the most notable are ‚Äú[1mld[0m‚Äù, a linker, and ‚Äú[1mas[0m‚Äù, an "
"assembler. Other\n"
"tools include programs to display binary profiling information, list the\n"
"strings in a binary file, and utilities for working with archives.  The "
"‚Äú[1mbfd[0m‚Äù\n"
"library for working with executable and object formats is also included."

#: gnu/packages/base.scm:476
msgid "The GNU C Library"
msgstr "The GNU C Library"

#: gnu/packages/base.scm:478
msgid ""
"Any Unix-like operating system needs a C library: the library which\n"
"defines the \"system calls\" and other basic facilities such as open, "
"malloc,\n"
"printf, exit...\n"
"\n"
"The GNU C library is used as the C library in the GNU system and most "
"systems\n"
"with the Linux kernel."
msgstr ""
"Any Unix-like operating system needs a C library: the library which\n"
"defines the ‚Äú[1msystem calls[0m‚Äù and other basic facilities such as open, "
"malloc,\n"
"printf, exit...\n"
"\n"
"The GNU C library is used as the C library in the GNU system and most "
"systems\n"
"with the Linux kernel."

#: gnu/packages/base.scm:547
msgid "Database of current and historical time zones"
msgstr "Database of current and historical time zones"

#: gnu/packages/base.scm:548
msgid ""
"The Time Zone Database (often called tz or zoneinfo)\n"
"contains code and data that represent the history of local time for many\n"
"representative locations around the globe. It is updated periodically to\n"
"reflect changes made by political bodies to time zone boundaries, UTC "
"offsets,\n"
"and daylight-saving rules."
msgstr ""
"The Time Zone Database (often called tz or zoneinfo)\n"
"contains code and data that represent the history of local time for many\n"
"representative locations around the globe. It is updated periodically to\n"
"reflect changes made by political bodies to time zone boundaries, UTC "
"offsets,\n"
"and daylight-saving rules."

#: gnu/packages/base.scm:925
msgid "GNU C++ standard library (intermediate)"
msgstr "GNU C++ standard library (intermediate)"

#: gnu/packages/base.scm:1012
msgid "The linker wrapper"
msgstr "The linker wrapper"

#: gnu/packages/base.scm:1014
msgid ""
"The linker wrapper (or `ld-wrapper') wraps the linker to add any\n"
"missing `-rpath' flags, and to detect any misuse of libraries outside of "
"the\n"
"store."
msgstr ""
"The linker wrapper (or ‚Äò[1mld-wrapper[0m‚Äô) wraps the linker to add any\n"
"missing ‚Äò[1m-rpath[0m‚Äô flags, and to detect any misuse of libraries outside "
"of the\n"
"store."

#: gnu/packages/guile.scm:96 gnu/packages/guile.scm:167
msgid "Scheme implementation intended especially for extensions"
msgstr "Scheme implementation intended especially for extensions"

#: gnu/packages/guile.scm:98 gnu/packages/guile.scm:169
msgid ""
"Guile is the GNU Ubiquitous Intelligent Language for Extensions, the\n"
"official extension language of the GNU system.  It is an implementation of\n"
"the Scheme language which can be easily embedded in other applications to\n"
"provide a convenient means of extending the functionality of the "
"application\n"
"without requiring the source code to be rewritten."
msgstr ""
"Guile is the GNU Ubiquitous Intelligent Language for Extensions, the\n"
"official extension language of the GNU system.  It is an implementation of\n"
"the Scheme language which can be easily embedded in other applications to\n"
"provide a convenient means of extending the functionality of the "
"application\n"
"without requiring the source code to be rewritten."

#: gnu/packages/guile.scm:212
msgid "Framework for building readers for GNU Guile"
msgstr "Framework for building readers for GNU Guile"

#: gnu/packages/guile.scm:214
msgid ""
"Guile-Reader is a simple framework for building readers for GNU Guile.\n"
"\n"
"The idea is to make it easy to build procedures that extend Guile‚Äôs read\n"
"procedure. Readers supporting various syntax variants can easily be "
"written,\n"
"possibly by re-using existing ‚Äútoken readers‚Äù of a standard Scheme\n"
"readers. For example, it is used to implement Skribilo‚Äôs R5RS-derived\n"
"document syntax.\n"
"\n"
"Guile-Reader‚Äôs approach is similar to Common Lisp‚Äôs ‚Äúread table‚Äù, but\n"
"hopefully more powerful and flexible (for instance, one may instantiate as\n"
"many readers as needed)."
msgstr ""
"Guile-Reader is a simple framework for building readers for GNU Guile.\n"
"\n"
"The idea is to make it easy to build procedures that extend Guile[0m‚Äôs read\n"
"procedure. Readers supporting various syntax variants can easily be "
"written,\n"
"possibly by re-using existing ‚Äú[1mtoken readers[0m‚Äù of a standard Scheme\n"
"readers. For example, it is used to implement Skribilo[0m‚Äôs R5RS-derived\n"
"document syntax.\n"
"\n"
"Guile-Reader[0m‚Äôs approach is similar to Common Lisp[0m‚Äôs ‚Äú[1mread "
"table[0m‚Äù, but\n"
"hopefully more powerful and flexible (for instance, one may instantiate as\n"
"many readers as needed)."

#: gnu/packages/guile.scm:266
msgid "Guile bindings to ncurses"
msgstr "Guile bindings to ncurses"

#: gnu/packages/guile.scm:268
msgid ""
"guile-ncurses provides Guile language bindings for the ncurses\n"
"library."
msgstr ""
"guile-ncurses provides Guile language bindings for the ncurses\n"
"library."

#: gnu/packages/guile.scm:288
msgid "Run jobs at scheduled times"
msgstr "Run jobs at scheduled times"

#: gnu/packages/guile.scm:290
msgid ""
"GNU Mcron is a complete replacement for Vixie cron.  It is used to run\n"
"tasks on a schedule, such as every hour or every Monday.  Mcron is written "
"in\n"
"Guile, so its configuration can be written in Scheme; the original cron\n"
"format is also supported."
msgstr ""
"GNU Mcron is a complete replacement for Vixie cron.  It is used to run\n"
"tasks on a schedule, such as every hour or every Monday.  Mcron is written "
"in\n"
"Guile, so its configuration can be written in Scheme; the original cron\n"
"format is also supported."

#: gnu/packages/guile.scm:318
msgid "Collection of useful Guile Scheme modules"
msgstr "Collection of useful Guile Scheme modules"

#: gnu/packages/guile.scm:320
msgid ""
"guile-lib is intended as an accumulation place for pure-scheme Guile\n"
"modules, allowing for people to cooperate integrating their generic Guile\n"
"modules into a coherent library.  Think \"a down-scaled, limited-scope CPAN\n"
"for Guile\"."
msgstr ""
"guile-lib is intended as an accumulation place for pure-scheme Guile\n"
"modules, allowing for people to cooperate integrating their generic Guile\n"
"modules into a coherent library.  Think \"a down-scaled, limited-scope CPAN\n"
"for Guile\"."

#: gnu/packages/lout.scm:109
msgid "Lout, a document layout system similar in style to LaTeX"
msgstr "Lout, a document layout system similar in style to LaTeX"

#: gnu/packages/lout.scm:111
msgid ""
"The Lout document formatting system is now reads a high-level description "
"of\n"
"a document similar in style to LaTeX and produces a PostScript or plain "
"text\n"
"output file.\n"
"\n"
"Lout offers an unprecedented range of advanced features, including optimal\n"
"paragraph and page breaking, automatic hyphenation, PostScript EPS file\n"
"inclusion and generation, equation formatting, tables, diagrams, rotation "
"and\n"
"scaling, sorted indexes, bibliographic databases, running headers and\n"
"odd-even pages, automatic cross referencing, multilingual documents "
"including\n"
"hyphenation (most European languages are supported), formatting of computer\n"
"programs, and much more, all ready to use.  Furthermore, Lout is easily\n"
"extended with definitions which are very much easier to write than troff of\n"
"TeX macros because Lout is a high-level, purely functional language, the\n"
"outcome of an eight-year research project that went back to the\n"
"beginning."
msgstr ""
"The Lout document formatting system is now reads a high-level description "
"of\n"
"a document similar in style to LaTeX and produces a PostScript or plain "
"text\n"
"output file.\n"
"\n"
"Lout offers an unprecedented range of advanced features, including optimal\n"
"paragraph and page breaking, automatic hyphenation, PostScript EPS file\n"
"inclusion and generation, equation formatting, tables, diagrams, rotation "
"and\n"
"scaling, sorted indexes, bibliographic databases, running headers and\n"
"odd-even pages, automatic cross referencing, multilingual documents "
"including\n"
"hyphenation (most European languages are supported), formatting of computer\n"
"programs, and much more, all ready to use.  Furthermore, Lout is easily\n"
"extended with definitions which are very much easier to write than troff of\n"
"TeX macros because Lout is a high-level, purely functional language, the\n"
"outcome of an eight-year research project that went back to the\n"
"beginning."

#: gnu/packages/recutils.scm:52
msgid "Manipulate plain text files as databases"
msgstr "Manipulate plain text files as databases"

#: gnu/packages/recutils.scm:54
msgid ""
"GNU Recutils is a set of tools and libraries for creating and\n"
"manipulating text-based, human-editable databases.  Despite being text-"
"based,\n"
"databases created with Recutils carry all of the expected features such as\n"
"unique fields, primary keys, time stamps and more. Many different field "
"types\n"
"are supported, as is encryption."
msgstr ""
"GNU Recutils is a set of tools and libraries for creating and\n"
"manipulating text-based, human-editable databases.  Despite being text-"
"based,\n"
"databases created with Recutils carry all of the expected features such as\n"
"unique fields, primary keys, time stamps and more. Many different field "
"types\n"
"are supported, as is encryption."

#: guix/scripts/build.scm:54
#, scheme-format
msgid "package `~a' has no source~%"
msgstr "package ‚Äò[1m~a[0m‚Äô has no source~%"

#: guix/scripts/build.scm:73
msgid ""
"Usage: guix build [OPTION]... PACKAGE-OR-DERIVATION...\n"
"Build the given PACKAGE-OR-DERIVATION and return their output paths.\n"
msgstr ""
"Usage: guix build [OPTION]... PACKAGE-OR-DERIVATION...\n"
"Build the given PACKAGE-OR-DERIVATION and return their output paths.\n"

#: guix/scripts/build.scm:75
msgid ""
"\n"
"  -e, --expression=EXPR  build the package or derivation EXPR evaluates to"
msgstr ""
"\n"
"  -e, --expression=EXPR  build the package or derivation EXPR evaluates to"

#: guix/scripts/build.scm:77
msgid ""
"\n"
"  -S, --source           build the packages' source derivations"
msgstr ""
"\n"
"  -S, --source           build the packages' source derivations"

#: guix/scripts/build.scm:79
msgid ""
"\n"
"  -s, --system=SYSTEM    attempt to build for SYSTEM--e.g., \"i686-linux\""
msgstr ""
"\n"
"  -s, --system=SYSTEM    attempt to build for SYSTEM--e.g., ‚Äú[1mi686-"
"linux[0m‚Äù"

#: guix/scripts/build.scm:81
msgid ""
"\n"
"      --target=TRIPLET   cross-build for TRIPLET--e.g., \"armel-linux-gnu\""
msgstr ""
"\n"
"      --target=TRIPLET   cross-build for TRIPLET--e.g., ‚Äú[1marmel-linux-"
"gnu[0m‚Äù"

#: guix/scripts/build.scm:83
msgid ""
"\n"
"  -d, --derivations      return the derivation paths of the given packages"
msgstr ""
"\n"
"  -d, --derivations      return the derivation paths of the given packages"

#: guix/scripts/build.scm:85
msgid ""
"\n"
"  -K, --keep-failed      keep build tree of failed builds"
msgstr ""
"\n"
"  -K, --keep-failed      keep build tree of failed builds"

#: guix/scripts/build.scm:87
msgid ""
"\n"
"  -n, --dry-run          do not build the derivations"
msgstr ""
"\n"
"  -n, --dry-run          do not build the derivations"

#: guix/scripts/build.scm:89 guix/scripts/package.scm:488
msgid ""
"\n"
"      --fallback         fall back to building when the substituter fails"
msgstr ""
"\n"
"      --fallback         fall back to building when the substituter fails"

#: guix/scripts/build.scm:91 guix/scripts/package.scm:490
msgid ""
"\n"
"      --no-substitutes   build instead of resorting to pre-built substitutes"
msgstr ""
"\n"
"      --no-substitutes   build instead of resorting to pre-built substitutes"

#: guix/scripts/build.scm:93 guix/scripts/package.scm:492
msgid ""
"\n"
"      --max-silent-time=SECONDS\n"
"                         mark the build as failed after SECONDS of silence"
msgstr ""
"\n"
"      --max-silent-time=SECONDS\n"
"                         mark the build as failed after SECONDS of silence"

#: guix/scripts/build.scm:96
msgid ""
"\n"
"  -c, --cores=N          allow the use of up to N CPU cores for the build"
msgstr ""
"\n"
"  -c, --cores=N          allow the use of up to N CPU cores for the build"

#: guix/scripts/build.scm:98
msgid ""
"\n"
"  -r, --root=FILE        make FILE a symlink to the result, and register it\n"
"                         as a garbage collector root"
msgstr ""
"\n"
"  -r, --root=FILE        make FILE a symlink to the result, and register it\n"
"                         as a garbage collector root"

#: guix/scripts/build.scm:101
msgid ""
"\n"
"      --verbosity=LEVEL  use the given verbosity LEVEL"
msgstr ""
"\n"
"      --verbosity=LEVEL  use the given verbosity LEVEL"

#: guix/scripts/build.scm:103
msgid ""
"\n"
"      --log-file         return the log file names for the given derivations"
msgstr ""
"\n"
"      --log-file         return the log file names for the given derivations"

#: guix/scripts/build.scm:106 guix/scripts/download.scm:53
#: guix/scripts/package.scm:509 guix/scripts/gc.scm:58
#: guix/scripts/hash.scm:51 guix/scripts/pull.scm:172
#: guix/scripts/substitute-binary.scm:477
msgid ""
"\n"
"  -h, --help             display this help and exit"
msgstr ""
"\n"
"  -h, --help             display this help and exit"

#: guix/scripts/build.scm:108 guix/scripts/download.scm:55
#: guix/scripts/package.scm:511 guix/scripts/gc.scm:60
#: guix/scripts/hash.scm:53 guix/scripts/pull.scm:174
#: guix/scripts/substitute-binary.scm:479
msgid ""
"\n"
"  -V, --version          display version information and exit"
msgstr ""
"\n"
"  -V, --version          display version information and exit"

#: guix/scripts/build.scm:148
#, scheme-format
msgid "~a: not a number~%"
msgstr "~a: not a number~%"

#: guix/scripts/build.scm:186 guix/scripts/download.scm:96
#: guix/scripts/package.scm:721 guix/scripts/gc.scm:152
#: guix/scripts/pull.scm:205
#, scheme-format
msgid "~A: unrecognized option~%"
msgstr "~A: unrecognized option~%"

#: guix/scripts/build.scm:212
#, scheme-format
msgid "failed to create GC root `~a': ~a~%"
msgstr "failed to create GC root ‚Äò[1m~a[0m‚Äô: ~a~%"

#: guix/scripts/build.scm:236 guix/scripts/package.scm:332
#, scheme-format
msgid "ambiguous package specification `~a'~%"
msgstr "ambiguous package specification ‚Äò[1m~a[0m‚Äô~%"

#: guix/scripts/build.scm:237 guix/scripts/package.scm:334
#, scheme-format
msgid "choosing ~a from ~a~%"
msgstr "choosing ~a from ~a~%"

#: guix/scripts/build.scm:243
#, scheme-format
msgid "~A: package not found for version ~a~%"
msgstr "~A: package not found for version ~a~%"

#: guix/scripts/build.scm:245
#, scheme-format
msgid "~A: unknown package~%"
msgstr "~A: unknown package~%"

#: guix/scripts/build.scm:303
#, scheme-format
msgid "no build log for '~a'~%"
msgstr "no build log for '~a'~%"

#: guix/scripts/download.scm:44
msgid ""
"Usage: guix download [OPTION] URL\n"
"Download the file at URL, add it to the store, and print its store path\n"
"and the hash of its contents.\n"
"\n"
"Supported formats: 'nix-base32' (default), 'base32', and 'base16'\n"
"('hex' and 'hexadecimal' can be used as well).\n"
msgstr ""
"Usage: guix download [OPTION] URL\n"
"Download the file at URL, add it to the store, and print its store path\n"
"and the hash of its contents.\n"
"\n"
"Supported formats: ‚Äò[1mnix-base32[0m‚Äô (default), 'base32', and "
"‚Äò[1mbase16[0m‚Äô\n"
"('hex' and ‚Äò[1mhexadecimal[0m‚Äô can be used as well).\n"

#: guix/scripts/download.scm:50 guix/scripts/hash.scm:48
msgid ""
"\n"
"  -f, --format=FMT       write the hash in the given format"
msgstr ""
"\n"
"  -f, --format=FMT       write the hash in the given format"

#: guix/scripts/download.scm:73 guix/scripts/hash.scm:71
#, scheme-format
msgid "unsupported hash format: ~a~%"
msgstr "unsupported hash format: ~a~%"

#: guix/scripts/download.scm:106
#, scheme-format
msgid "~a: failed to parse URI~%"
msgstr "~a: failed to parse URI~%"

#: guix/scripts/download.scm:117
#, scheme-format
msgid "~a: download failed~%"
msgstr "~a: download failed~%"

#: guix/scripts/package.scm:74
#, scheme-format
msgid "failed to build the empty profile~%"
msgstr "failed to build the empty profile~%"

#: guix/scripts/package.scm:83
#, scheme-format
msgid "switching from generation ~a to ~a~%"
msgstr "switching from generation ~a to ~a~%"

#: guix/scripts/package.scm:94 guix/scripts/package.scm:826
#: guix/scripts/package.scm:937
#, scheme-format
msgid "profile '~a' does not exist~%"
msgstr "profile ‚Äò[1m~a[0m‚Äô does not exist~%"

#: guix/scripts/package.scm:98
#, scheme-format
msgid "nothing to do: already at the empty profile~%"
msgstr "nothing to do: already at the empty profile~%"

#: guix/scripts/package.scm:183
#, scheme-format
msgid "The following package would be removed:~%~{~a~%~}~%"
msgstr "The following package would be removed:~%~{~a~%~}~%"

#: guix/scripts/package.scm:188
#, scheme-format
msgid "The following package will be removed:~%~{~a~%~}~%"
msgstr "The following package will be removed:~%~{~a~%~}~%"

#: guix/scripts/package.scm:200
#, scheme-format
msgid "The following package would be installed:~%~{~a~%~}~%"
msgstr "The following package would be installed:~%~{~a~%~}~%"

#: guix/scripts/package.scm:205
#, scheme-format
msgid "The following package will be installed:~%~{~a~%~}~%"
msgstr "The following package will be installed:~%~{~a~%~}~%"

#: guix/scripts/package.scm:322
#, scheme-format
msgid "package `~a' lacks output `~a'~%"
msgstr "package ‚Äò[1m~a[0m‚Äô lacks output ‚Äò[1m~a[0m‚Äô~%"

#: guix/scripts/package.scm:339
#, scheme-format
msgid "~a: package not found~%"
msgstr "~a: package not found~%"

#: guix/scripts/package.scm:374
#, scheme-format
msgid "looking for the latest release of GNU ~a..."
msgstr "looking for the latest release of GNU ~a..."

#: guix/scripts/package.scm:378
#, scheme-format
msgid "~a: note: using ~a but ~a is available upstream~%"
msgstr "~a: note: using ~a but ~a is available upstream~%"

#: guix/scripts/package.scm:447
#, scheme-format
msgid "The following environment variable definitions may be needed:~%"
msgstr "The following environment variable definitions may be needed:~%"

#: guix/scripts/package.scm:462
msgid ""
"Usage: guix package [OPTION]... PACKAGES...\n"
"Install, remove, or upgrade PACKAGES in a single transaction.\n"
msgstr ""
"Usage: guix package [OPTION]... PACKAGES...\n"
"Install, remove, or upgrade PACKAGES in a single transaction.\n"

#: guix/scripts/package.scm:464
msgid ""
"\n"
"  -i, --install=PACKAGE  install PACKAGE"
msgstr ""
"\n"
"  -i, --install=PACKAGE  install PACKAGE"

#: guix/scripts/package.scm:466
msgid ""
"\n"
"  -e, --install-from-expression=EXP\n"
"                         install the package EXP evaluates to"
msgstr ""
"\n"
"  -e, --install-from-expression=EXP\n"
"                         install the package EXP evaluates to"

#: guix/scripts/package.scm:469
msgid ""
"\n"
"  -r, --remove=PACKAGE   remove PACKAGE"
msgstr ""
"\n"
"  -r, --remove=PACKAGE   remove PACKAGE"

#: guix/scripts/package.scm:471
msgid ""
"\n"
"  -u, --upgrade[=REGEXP] upgrade all the installed packages matching REGEXP"
msgstr ""
"\n"
"  -u, --upgrade[=REGEXP] upgrade all the installed packages matching REGEXP"

#: guix/scripts/package.scm:473
msgid ""
"\n"
"      --roll-back        roll back to the previous generation"
msgstr ""
"\n"
"      --roll-back        roll back to the previous generation"

#: guix/scripts/package.scm:475
msgid ""
"\n"
"      --search-paths     display needed environment variable definitions"
msgstr ""
"\n"
"      --search-paths     display needed environment variable definitions"

#: guix/scripts/package.scm:477
msgid ""
"\n"
"  -l, --list-generations[=PATTERN]\n"
"                         list generations matching PATTERN"
msgstr ""
"\n"
"  -l, --list-generations[=PATTERN]\n"
"                         list generations matching PATTERN"

#: guix/scripts/package.scm:480
msgid ""
"\n"
"  -d, --delete-generations[=PATTERN]\n"
"                         delete generations matching PATTERN"
msgstr ""
"\n"
"  -d, --delete-generations[=PATTERN]\n"
"                         delete generations matching PATTERN"

#: guix/scripts/package.scm:484
msgid ""
"\n"
"  -p, --profile=PROFILE  use PROFILE instead of the user's default profile"
msgstr ""
"\n"
"  -p, --profile=PROFILE  use PROFILE instead of the user's default profile"

#: guix/scripts/package.scm:486
msgid ""
"\n"
"  -n, --dry-run          show what would be done without actually doing it"
msgstr ""
"\n"
"  -n, --dry-run          show what would be done without actually doing it"

#: guix/scripts/package.scm:495
msgid ""
"\n"
"      --bootstrap        use the bootstrap Guile to build the profile"
msgstr ""
"\n"
"      --bootstrap        use the bootstrap Guile to build the profile"

#: guix/scripts/package.scm:497 guix/scripts/pull.scm:165
msgid ""
"\n"
"      --verbose          produce verbose output"
msgstr ""
"\n"
"      --verbose          produce verbose output"

#: guix/scripts/package.scm:500
msgid ""
"\n"
"  -s, --search=REGEXP    search in synopsis and description using REGEXP"
msgstr ""
"\n"
"  -s, --search=REGEXP    search in synopsis and description using REGEXP"

#: guix/scripts/package.scm:502
msgid ""
"\n"
"  -I, --list-installed[=REGEXP]\n"
"                         list installed packages matching REGEXP"
msgstr ""
"\n"
"  -I, --list-installed[=REGEXP]\n"
"                         list installed packages matching REGEXP"

#: guix/scripts/package.scm:505
msgid ""
"\n"
"  -A, --list-available[=REGEXP]\n"
"                         list available packages matching REGEXP"
msgstr ""
"\n"
"  -A, --list-available[=REGEXP]\n"
"                         list available packages matching REGEXP"

#: guix/scripts/package.scm:723
#, scheme-format
msgid "~A: extraneous argument~%"
msgstr "~A: extraneous argument~%"

#: guix/scripts/package.scm:737
#, scheme-format
msgid "Try \"info '(guix) Invoking guix package'\" for more information.~%"
msgstr ""
"Try ‚Äú[1minfo '(guix) Invoking guix package'[0m‚Äù for more information.~%"

#: guix/scripts/package.scm:759
#, scheme-format
msgid "error: while creating directory `~a': ~a~%"
msgstr "error: while creating directory ‚Äò[1m~a[0m‚Äô: ~a~%"

#: guix/scripts/package.scm:763
#, scheme-format
msgid "Please create the `~a' directory, with you as the owner.~%"
msgstr "Please create the ‚Äò[1m~a[0m‚Äô directory, with you as the owner.~%"

#: guix/scripts/package.scm:770
#, scheme-format
msgid "error: directory `~a' is not owned by you~%"
msgstr "error: directory ‚Äò[1m~a[0m‚Äô is not owned by you~%"

#: guix/scripts/package.scm:773
#, scheme-format
msgid "Please change the owner of `~a' to user ~s.~%"
msgstr "Please change the owner of ‚Äò[1m~a[0m‚Äô to user ~s.~%"

#: guix/scripts/package.scm:796
#, scheme-format
msgid "deleting ~a~%"
msgstr "deleting ~a~%"

#: guix/scripts/package.scm:849 guix/scripts/package.scm:951
#, scheme-format
msgid "invalid syntax: ~a~%"
msgstr "invalid syntax: ~a~%"

#: guix/scripts/package.scm:878
#, scheme-format
msgid "nothing to be done~%"
msgstr "nothing to be done~%"

#: guix/scripts/package.scm:900
#, scheme-format
msgid "~a package in profile~%"
msgstr "~a package in profile~%"

#: guix/scripts/package.scm:915
#, scheme-format
msgid "Generation ~a\t~a"
msgstr "Generation ~a\t~a"

#: guix/scripts/package.scm:922
#, scheme-format
msgid "~a\t(current)~%"
msgstr "~a\t(current)~%"

#: guix/scripts/gc.scm:39
msgid ""
"Usage: guix gc [OPTION]... PATHS...\n"
"Invoke the garbage collector.\n"
msgstr ""
"Usage: guix gc [OPTION]... PATHS...\n"
"Invoke the garbage collector.\n"

#: guix/scripts/gc.scm:41
msgid ""
"\n"
"  -C, --collect-garbage[=MIN]\n"
"                         collect at least MIN bytes of garbage"
msgstr ""
"\n"
"  -C, --collect-garbage[=MIN]\n"
"                         collect at least MIN bytes of garbage"

#: guix/scripts/gc.scm:44
msgid ""
"\n"
"  -d, --delete           attempt to delete PATHS"
msgstr ""
"\n"
"  -d, --delete           attempt to delete PATHS"

#: guix/scripts/gc.scm:46
msgid ""
"\n"
"      --list-dead        list dead paths"
msgstr ""
"\n"
"      --list-dead        list dead paths"

#: guix/scripts/gc.scm:48
msgid ""
"\n"
"      --list-live        list live paths"
msgstr ""
"\n"
"      --list-live        list live paths"

#: guix/scripts/gc.scm:51
msgid ""
"\n"
"      --references       list the references of PATHS"
msgstr ""
"\n"
"      --references       list the references of PATHS"

#: guix/scripts/gc.scm:53
msgid ""
"\n"
"  -R, --requisites       list the requisites of PATHS"
msgstr ""
"\n"
"  -R, --requisites       list the requisites of PATHS"

#: guix/scripts/gc.scm:55
msgid ""
"\n"
"      --referrers        list the referrers of PATHS"
msgstr ""
"\n"
"      --referrers        list the referrers of PATHS"

#: guix/scripts/gc.scm:92
#, scheme-format
msgid "unknown unit: ~a~%"
msgstr "unknown unit: ~a~%"

#: guix/scripts/gc.scm:93
#, scheme-format
msgid "invalid number: ~a~%"
msgstr "invalid number: ~a~%"

#: guix/scripts/gc.scm:114
#, scheme-format
msgid "invalid amount of storage: ~a~%"
msgstr "invalid amount of storage: ~a~%"

#: guix/scripts/hash.scm:43
msgid ""
"Usage: guix hash [OPTION] FILE\n"
"Return the cryptographic hash of FILE.\n"
"\n"
"Supported formats: 'nix-base32' (default), 'base32', and 'base16'\n"
"('hex' and 'hexadecimal' can be used as well).\n"
msgstr ""
"Usage: guix hash [OPTION] FILE\n"
"Return the cryptographic hash of FILE.\n"
"\n"
"Supported formats: ‚Äò[1mnix-base32[0m‚Äô (default), 'base32', and "
"‚Äò[1mbase16[0m‚Äô\n"
"('hex' and ‚Äò[1mhexadecimal[0m‚Äô can be used as well).\n"

#: guix/scripts/hash.scm:96
#, scheme-format
msgid "unrecognized option: ~a~%"
msgstr "unrecognized option: ~a~%"

#: guix/scripts/hash.scm:123 guix/ui.scm:194
#, scheme-format
msgid "~a~%"
msgstr "~a~%"

#: guix/scripts/hash.scm:126
#, scheme-format
msgid "wrong number of arguments~%"
msgstr "wrong number of arguments~%"

#: guix/scripts/pull.scm:163
msgid ""
"Usage: guix pull [OPTION]...\n"
"Download and deploy the latest version of Guix.\n"
msgstr ""
"Usage: guix pull [OPTION]...\n"
"Download and deploy the latest version of Guix.\n"

#: guix/scripts/pull.scm:167
msgid ""
"\n"
"      --url=URL          download the Guix tarball from URL"
msgstr ""
"\n"
"      --url=URL          download the Guix tarball from URL"

#: guix/scripts/pull.scm:169
msgid ""
"\n"
"      --bootstrap        use the bootstrap Guile to build the new Guix"
msgstr ""
"\n"
"      --bootstrap        use the bootstrap Guile to build the new Guix"

#: guix/scripts/pull.scm:207
#, scheme-format
msgid "~A: unexpected argument~%"
msgstr "~A: unexpected argument~%"

#: guix/scripts/pull.scm:216
msgid "failed to download up-to-date source, exiting\n"
msgstr "failed to download up-to-date source, exiting\n"

#: guix/scripts/pull.scm:235
#, scheme-format
msgid "updated ~a successfully deployed under `~a'~%"
msgstr "updated ~a successfully deployed under ‚Äò[1m~a[0m‚Äô~%"

#: guix/scripts/pull.scm:238
#, scheme-format
msgid "failed to update Guix, check the build log~%"
msgstr "failed to update Guix, check the build log~%"

#: guix/scripts/pull.scm:240
msgid "Guix already up to date\n"
msgstr "Guix already up to date\n"

#: guix/scripts/substitute-binary.scm:163
#, scheme-format
msgid "while fetching ~a: server is unresponsive~%"
msgstr "while fetching ~a: server is unresponsive~%"

#: guix/scripts/substitute-binary.scm:165
#, scheme-format
msgid "try `--no-substitutes' if the problem persists~%"
msgstr "try ‚Äò[1m--no-substitutes[0m‚Äô if the problem persists~%"

#: guix/scripts/substitute-binary.scm:439
#, scheme-format
msgid "Downloading, please wait...~%"
msgstr "Downloading, please wait...~%"

#: guix/scripts/substitute-binary.scm:441
#, scheme-format
msgid "(Please consider upgrading Guile to get proper progress report.)~%"
msgstr "(Please consider upgrading Guile to get proper progress report.)~%"

#: guix/scripts/substitute-binary.scm:458
#, scheme-format
msgid "host name lookup error: ~a~%"
msgstr "host name lookup error: ~a~%"

#: guix/scripts/substitute-binary.scm:467
msgid ""
"Usage: guix substitute-binary [OPTION]...\n"
"Internal tool to substitute a pre-built binary to a local build.\n"
msgstr ""
"Usage: guix substitute-binary [OPTION]...\n"
"Internal tool to substitute a pre-built binary to a local build.\n"

#: guix/scripts/substitute-binary.scm:469
msgid ""
"\n"
"      --query            report on the availability of substitutes for the\n"
"                         store file names passed on the standard input"
msgstr ""
"\n"
"      --query            report on the availability of substitutes for the\n"
"                         store file names passed on the standard input"

#: guix/scripts/substitute-binary.scm:472
msgid ""
"\n"
"      --substitute STORE-FILE DESTINATION\n"
"                         download STORE-FILE and store it as a Nar in file\n"
"                         DESTINATION"
msgstr ""
"\n"
"      --substitute STORE-FILE DESTINATION\n"
"                         download STORE-FILE and store it as a Nar in file\n"
"                         DESTINATION"

#: guix/scripts/substitute-binary.scm:593
#, scheme-format
msgid "~a: unrecognized options~%"
msgstr "~a: unrecognized options~%"

#: guix/gnu-maintenance.scm:357
#, scheme-format
msgid "signature verification failed for `~a'~%"
msgstr "signature verification failed for ‚Äò[1m~a[0m‚Äô~%"

#: guix/gnu-maintenance.scm:359
#, scheme-format
msgid "(could be because the public key is not in your keyring)~%"
msgstr "(could be because the public key is not in your keyring)~%"

#: guix/gnu-maintenance.scm:434
#, scheme-format
msgid "~a: could not locate source file"
msgstr "~a: could not locate source file"

#: guix/gnu-maintenance.scm:439
#, scheme-format
msgid "~a: ~a: no `version' field in source; skipping~%"
msgstr "~a: ~a: no ‚Äò[1mversion[0m‚Äô field in source; skipping~%"

#: guix/ui.scm:122
#, scheme-format
msgid "failed to install locale: ~a~%"
msgstr "failed to install locale: ~a~%"

#: guix/ui.scm:141
msgid ""
"Copyright (C) 2013 the Guix authors\n"
"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl."
"html>\n"
"This is free software: you are free to change and redistribute it.\n"
"There is NO WARRANTY, to the extent permitted by law.\n"
msgstr ""
"Copyright (C) 2013 the Guix authors\n"
"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl."
"html>\n"
"This is free software: you are free to change and redistribute it.\n"
"There is NO WARRANTY, to the extent permitted by law.\n"

#: guix/ui.scm:149
#, scheme-format
msgid ""
"\n"
"Report bugs to: ~a."
msgstr ""
"\n"
"Report bugs to: ~a."

#: guix/ui.scm:151
#, scheme-format
msgid ""
"\n"
"~a home page: <~a>"
msgstr ""
"\n"
"~a home page: <~a>"

#: guix/ui.scm:153
msgid ""
"\n"
"General help using GNU software: <http://www.gnu.org/gethelp/>"
msgstr ""
"\n"
"General help using GNU software: <http://www.gnu.org/gethelp/>"

#: guix/ui.scm:160
#, scheme-format
msgid "~a: invalid number~%"
msgstr "~a: invalid number~%"

#: guix/ui.scm:171
#, scheme-format
msgid "~a:~a:~a: package `~a' has an invalid input: ~s~%"
msgstr "~a:~a:~a: package ‚Äò[1m~a[0m‚Äô has an invalid input: ~s~%"

#: guix/ui.scm:178
#, scheme-format
msgid "~a: ~a: build system `~a' does not support cross builds~%"
msgstr "~a: ~a: build system ‚Äò[1m~a[0m‚Äô does not support cross builds~%"

#: guix/ui.scm:183
#, scheme-format
msgid "failed to connect to `~a': ~a~%"
msgstr "failed to connect to ‚Äò[1m~a[0m‚Äô: ~a~%"

#: guix/ui.scm:188
#, scheme-format
msgid "build failed: ~a~%"
msgstr "build failed: ~a~%"

#: guix/ui.scm:203
#, scheme-format
msgid "failed to read expression ~s: ~s~%"
msgstr "failed to read expression ~s: ~s~%"

#: guix/ui.scm:209
#, scheme-format
msgid "failed to evaluate expression `~a': ~s~%"
msgstr "failed to evaluate expression ‚Äò[1m~a[0m‚Äô: ~s~%"

#: guix/ui.scm:218
#, scheme-format
msgid "expression ~s does not evaluate to a package~%"
msgstr "expression ~s does not evaluate to a package~%"

#: guix/ui.scm:264
#, scheme-format
msgid "~:[The following derivation would be built:~%~{   ~a~%~}~;~]"
msgstr "~:[The following derivation would be built:~%~{   ~a~%~}~;~]"

#: guix/ui.scm:269
#, scheme-format
msgid "~:[The following file would be downloaded:~%~{   ~a~%~}~;~]"
msgstr "~:[The following file would be downloaded:~%~{   ~a~%~}~;~]"

#: guix/ui.scm:275
#, scheme-format
msgid "~:[The following derivation will be built:~%~{   ~a~%~}~;~]"
msgstr "~:[The following derivation will be built:~%~{   ~a~%~}~;~]"

#: guix/ui.scm:280
#, scheme-format
msgid "~:[The following file will be downloaded:~%~{   ~a~%~}~;~]"
msgstr "~:[The following file will be downloaded:~%~{   ~a~%~}~;~]"

#: guix/ui.scm:297
msgid "<unknown location>"
msgstr "<unknown location>"

#: guix/ui.scm:325
#, scheme-format
msgid "failed to create configuration directory `~a': ~a~%"
msgstr "failed to create configuration directory ‚Äò[1m~a[0m‚Äô: ~a~%"

#: guix/ui.scm:406 guix/ui.scm:416
msgid "unknown"
msgstr "unknown"

#: guix/ui.scm:525
#, scheme-format
msgid "invalid argument: ~a~%"
msgstr "invalid argument: ~a~%"

#: guix/ui.scm:530
#, scheme-format
msgid "Try `guix --help' for more information.~%"
msgstr "Try ‚Äò[1mguix --help[0m‚Äô for more information.~%"

#: guix/ui.scm:557
msgid ""
"Usage: guix COMMAND ARGS...\n"
"Run COMMAND with ARGS.\n"
msgstr ""
"Usage: guix COMMAND ARGS...\n"
"Run COMMAND with ARGS.\n"

#: guix/ui.scm:560
msgid "COMMAND must be one of the sub-commands listed below:\n"
msgstr "COMMAND must be one of the sub-commands listed below:\n"

#: guix/ui.scm:579
#, scheme-format
msgid "guix: ~a: command not found~%"
msgstr "guix: ~a: command not found~%"

#: guix/ui.scm:597
#, scheme-format
msgid "guix: missing command name~%"
msgstr "guix: missing command name~%"

#: guix/ui.scm:605
#, scheme-format
msgid "guix: unrecognized option '~a'~%"
msgstr "guix: unrecognized option '~a'~%"

#: guix/http-client.scm:186
#, scheme-format
msgid "using Guile ~a, which does not support ~s encoding~%"
msgstr "using Guile ~a, which does not support ~s encoding~%"

#: guix/http-client.scm:189
#, scheme-format
msgid "download failed; use a newer Guile~%"
msgstr "download failed; use a newer Guile~%"

#: guix/http-client.scm:201
#, scheme-format
msgid "following redirection to `~a'...~%"
msgstr "following redirection to ‚Äò[1m~a[0m‚Äô...~%"
